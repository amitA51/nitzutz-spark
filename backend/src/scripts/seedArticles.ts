import dotenv from 'dotenv';
import { prisma } from '../db';

// Load environment variables
dotenv.config();

const sampleArticles = [
  {
    title: 'האמון האפסי לעיצוב: איך מודל Zero Trust משדרג את החתתפתחות האישית',
    content: `מודל Zero Trust הוא גישה חדשנית לאבטחת מידע שמניחה שאף גורם לא אמין כברירת מחדל. בעולם האישי, ניתן ליישם עקרון זה בתהליכי פיתוח עצמי.

העיקרון המרכזי: אל תאמין - אמת תמיד. במקום להאמין בהנחות, בדוק כל השערה. בדומה למערכות אבטחה שבודקות כל גישה, גם בחיים האישיים חשוב לאמת הנחות יסוד.

שלוש נקודות מרכזיות:
1. **אימות רציף** - בדיקת ההתקדמות שלך באופן קבוע
2. **הגבלת הרשאות** - התמקדות במה שבאמת חשוב
3. **ניטור מתמיד** - מעקב אחר שינויים והתאמה

היישום המעשי: כאשר אתה לומד מיומנות חדשה, אל תניח שאתה מתקדם - בדוק זאת. השתמש במדדים ברורים, קבל משוב חיצוני, והתאם את המסלול שלך בהתאם לנתונים בפועל.

הסיכון בהנחות: רוב האנשים מניחים שהם יודעים מה עובד עבורם. מודל Zero Trust מציע גישה שונה - להטיל ספק במה שאתה חושב שאתה יודע, ולבחון זאת שוב ושוב.

התוצאה: פיתוח אישי מבוסס נתונים, שמוביל להתקדמות אמיתית ולא דמיונית.`,
    category: 'סייבר',
    sourceUrl: 'https://example.com/zero-trust',
    excerpt: 'יישום מודל Zero Trust בפיתוח אישי - אל תאמין, אמת תמיד.',
  },
  {
    title: 'חשיבה הסתברותית: מדוע תחזיות שלנו תמיד שגויות?',
    content: `האדם הממוצע חושב בוודאויות, בעוד העולם פועל בהסתברויות. זה יוצר פער עצום בין הציפיות למציאות.

Confirmation Bias - אנחנו מחפשים אישורים למה שאנחנו כבר מאמינים בו. אם אני חושב שמניה תעלה, אני אמצא עשרות סיבות לכך, ואתעלם מעשרות סיבות נגדיות.

הבעיה המרכזית: אנחנו לא מעריכים את אי הוודאות נכון. במקום לומר "יש 60% סיכוי שזה יצליח", אנחנו אומרים "זה בטוח יצליח". ההבדל הזה קריטי.

פתרון מעשי - היגיינת החלטות:
1. רשום את התחזית שלך והסתברות ההצלחה
2. חכה לתוצאה
3. השווה תחזית למציאות
4. למד מהפער

Resulting - הטעות של שיפוט החלטות לפי תוצאות. החלטה טובה עם מזל רע נראית כמו טעות, והחלטה רעה עם מזל טוב נראית כמו גאונות.

המפתח: תהליך החשיבה חשוב יותר מהתוצאה. החלטה מבוססת נתונים שהובילה לתוצאה רעה היא עדיין החלטה נכונה.

דוגמה קלאסית: השקעה במניה שירדה. האם ההחלטה הייתה טובה? תלוי - מה היו הנתונים בזמן ההחלטה? אם הניתוח היה נכון והמידע היה טוב, אבל משהו בלתי צפוי קרה - ההחלטה הייתה נכונה למרות התוצאה.

סיכום: חשוב בהסתברויות, לא בוודאויות. תעד את ההחלטות שלך. למד מהתהליך, לא רק מהתוצאה.`,
    category: 'פסיכולוגיה',
    sourceUrl: 'https://example.com/probabilistic-thinking',
    excerpt: 'למה אנחנו חושבים בוודאויות כשהעולם עובד בהסתברויות?',
  },
  {
    title: 'תהליכי למידה אפקטיביים: מה באמת עובד?',
    content: `מחקרים מראים שרוב טכניקות הלמידה הפופולריות לא יעילות. הנה מה שבאמת עובד:

Spaced Repetition - חזרה מרווחת. במקום לחזור על חומר 10 פעמים ביום, תחזור פעם אחת ביום במשך 10 ימים. המוח זוכר טוב יותר כשיש מרווחים.

Active Recall - בדיקה עצמית. במקום לקרוא שוב, נסה להיזכר. "מה היו 3 הנקודות המרכזיות?" - זה מחזק את הזיכרון הרבה יותר מקריאה חוזרת.

Interleaving - ערבוב נושאים. במקום ללמוד נושא אחד לעומק ואז לעבור להבא, ערבב ביניהם. זה יותר קשה אבל מוביל ללמידה טובה יותר.

הבעיה בשיטות מסורתיות: Highlighting (סימון טקסט) ו-Rereading (קריאה חוזרת) פופולריים אבל לא יעילים. הם נותנים תחושת למידה מבלי למידה אמיתית.

עקרונות מפתח:
1. **קושי רצוי** - למידה צריכה להיות מאתגרת
2. **משוב מיידי** - דע מיד אם טעית
3. **עומק עיבוד** - התמקד בהבנה, לא בשינון

דוגמה מעשית: במקום לקרוא פרק 5 פעמים, קרא פעם אחת, סגור את הספר, ונסה לכתוב את הנקודות המרכזיות. בדוק מה החמצת. חזור על זה למחרת. זה קשה יותר אבל עובד טוב יותר.

מלכודת היומיומי: "הבנתי את זה" ≠ "אני זוכר את זה". רק בדיקה עצמית תגלה מה באמת נשאר.`,
    category: 'למידה',
    sourceUrl: 'https://example.com/effective-learning',
    excerpt: 'טכניקות למידה מבוססות מחקר שבאמת עובדות.',
  },
  {
    title: 'הפרדוקס של הבחירה: למה יותר אפשרויות = פחות שביעות רצון',
    content: `ברי שוורץ טען שיותר אפשרויות לא תמיד טוב יותר. זה נוגד את האינטואיציה שלנו, אבל מחקרים תומכים בזה.

ניסוי קלאסי: דוכן ריבה. 24 סוגי ריבה - 3% קנו. 6 סוגי ריבה - 30% קנו. פחות אפשרויות הובילו ליותר מכירות פי 10!

הסיבות:
1. **שיתוק החלטה** - יותר אפשרויות = יותר קשה להחליט
2. **חרטה וספק** - "אולי הייתה אפשרות יותר טובה?"
3. **עלות הזדמנות גבוהה** - על כל בחירה אתה מוותר על כל השאר

Maximizers vs Satisficers - יש שני טיפוסים של אנשים:
- Maximizers: מחפשים את האפשרות הטובה ביותר האפשרית
- Satisficers: מחפשים משהו "מספיק טוב"

מחקרים מראים ש-Satisficers מאושרים יותר! למרות שה-Maximizers מוצאים בחירות "טובות יותר" אובייקטיבית, הם פחות מרוצים מהן.

הפתרון המעשי:
1. הגבל את מספר האפשרויות (3-5 מקסימום)
2. הגדר קריטריונים לפני החיפוש
3. כש מצאת משהו שעומד בקריטריונים - עצור לחפש
4. אל תחזור על ההחלטה אחרי שקיבלת אותה

דוגמה אישית: בחירת קריירה. במקום לבדוק את כל האפשרויות בעולם, הגדר 3 קריטריונים חשובים. מצא משהו שעומד בהם. תפסיק לתהות "אולי יש משהו יותר טוב".

האירוניה: ברשות הבחירה האינסופית, אנחנו פחות חופשיים. האילוץ משחרר.`,
    category: 'פסיכולוגיה',
    sourceUrl: 'https://example.com/paradox-of-choice',
    excerpt: 'למה יותר אפשרויות גורמות לנו להיות פחות מרוצים?',
  },
  {
    title: 'עקרונות כתיבה ברורה: Less is More',
    content: `ג\'ורג\' אורוול קבע 6 כללים לכתיבה טובה. הכלל האחרון: "שבור כל כלל אם זה ישפר את הבהירות".

העיקרון המרכזי: פשטות > מורכבות. כתיבה טובה היא לא על הצגת אוצר מילים, אלא על העברת מסר.

6 הכללים של אורוול:
1. אל תשתמש במטאפורות נדושות
2. אל תשתמש במילה ארוכה כשיש קצרה
3. אם אפשר למחוק מילה - מחק
4. אל תשתמש בסבילי אם אפשר בפעיל
5. אל תשתמש בז\'רגון מקצועי אם יש מילה פשוטה
6. שבור כל כלל לפני שתכתוב משהו לא ברור

הבעיה בכתיבה אקדמית: אנשים חושבים שמורכב = חכם. זה לא נכון. חכם = ברור.

דוגמאות גרועות:
- "בהתחשב בנסיבות" → "לכן"
- "לבצע אימפלמנטציה" → "ליישם"
- "מטרת המשימה היא להשיג" → "המטרה"

Hemingway Editor - כלי שבודק רמת קושי של טקסט. מטרה: כתיבה ברמת כיתה ח'-ט'. לא כי הקוראים טיפשים, אלא כי פשוט = מהיר לקרוא.

העיקרון הזהב: כתוב כמו שאתה מדבר. אם לא היית אומר את זה בשיחה - אל תכתוב את זה.

תרגיל: קח פסקה שכתבת. מחק מילה אחת מכל משפט. הטקסט השתפר? כנראה שכן.`,
    category: 'כתיבה',
    sourceUrl: 'https://example.com/clear-writing',
    excerpt: 'כללי הכתיבה של ג\'ורג\' אורוול - פשטות מנצחת.',
  },
];

async function seedArticles() {
  console.log('🌱 Starting to seed sample articles...');
  
  try {
    for (const article of sampleArticles) {
      const created = await prisma.article.create({
        data: article,
      });
      console.log(`✅ Created article: "${created.title}"`);
    }
    
    console.log('\n🎉 Successfully seeded all articles!');
    console.log(`📊 Total articles created: ${sampleArticles.length}`);
    
    // Show categories
    const categories = [...new Set(sampleArticles.map(a => a.category))];
    console.log(`📚 Categories: ${categories.join(', ')}`);
    
  } catch (error) {
    console.error('❌ Error seeding articles:', error);
  } finally {
    await prisma.$disconnect();
  }
}

seedArticles();
